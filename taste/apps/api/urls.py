from django.conf.urls.defaults import patterns, url
from rest_framework import generics

from taste.apps.api.views import (
    root,
    RestaurantListView,
    RestaurantInstance,
    RestaurantMenuList,
    UserList,
    UserInstance,
    UserAvatar,
    UserFollow,
    UserUnfollow,
    UserFollowSuggestions,
    UserReviewList,
    UserFollowingList,
    UserFollowersList,
    UserFeed,
    UserFriendFeed,
    RestaurantReviewList,
    ReviewInstance,
    CriticList,
    CriticInstance,
    CriticInstanceReviews,
    UserToken,
    UserRevokeToken,
    UserPasswordResetRequest,
    Register,
    RestaurantCombinedSearch,
    RestaurantWidgetSearch,
    RestaurantSolrSearch,
    SearchAutocomplete,
    RestaurantAutocomplete,
    BlackBookList,
    BlackBookInstance,
    BlackBookEntryList,
    BlackBookEntryInstance,
    CityList,
)
from taste.apps.api.serializers import (
    NeighborhoodSerializer,
    OccasionSerializer,
    CuisineSerializer,
    PriceSerializer,
)

from taste.apps.restaurants.models import (
    Cuisine,
    Occasion,
    Neighborhood,
    Price,
)

urlpatterns = patterns(
    '',
    url(r'^$', root, name="api-root"),

    url(r'restaurants/$',
        RestaurantListView.as_view(),
        name="api-restaurant-list"),
    url(r'restaurants/(?P<slug>[-\w\d]+)/$',
        RestaurantInstance.as_view(),
        name="api-restaurant-instance"),
    url(r'restaurants/(?P<slug>[-\w\d]+)/menu/$',
        RestaurantMenuList.as_view(),
        name="api-restaurant-menu"),
    url(r'restaurants/(?P<slug>[-\w\d]+)/reviews/$',
        RestaurantReviewList.as_view(),
        name="api-restaurant-reviews"),
    url(r'restaurants/(?P<slug>[-\w\d]+)/reviews/(?P<pk>[\d]+)/$',
        ReviewInstance.as_view(),
        name="api-restaurant-review-instance"),

    url(r'users/$',
        UserList.as_view(),
        name="api-users-list"),
    url(r'users/(?P<slug>[A-Za-z0-9- @._]+)/$',
        UserInstance.as_view(),
        name="api-user-instance"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/avatar/$',
        UserAvatar.as_view(),
        name="api-user-instance-avatar"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/reviews/$',
        UserReviewList.as_view(),
        name="api-user-reviews"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/following/$',
        UserFollowingList.as_view(),
        name="api-user-following"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/followers/$',
        UserFollowersList.as_view(),
        name="api-user-followers"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/feed/$',
        UserFeed.as_view(),
        name="api-user-feed"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/friendsfeed/$',
        UserFriendFeed.as_view(),
        name="api-user-friend-feed"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/follow/$',
        UserFollow.as_view(),
        name="api-user-follow"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/unfollow/$',
        UserUnfollow.as_view(),
        name="api-user-unfollow"),
    url(r'users/(?P<username>[A-Za-z0-9- @._]+)/suggestions/$',
        UserFollowSuggestions.as_view(),
        name='api-user-follow-suggestions'),

    url(r'critics/$',
        CriticList.as_view(),
        name='api-critics-list'),
    url(r'critics/(?P<slug>[A-Za-z0-9-_]+)/$',
        CriticInstance.as_view(),
        name='api-critics-instance'),
    url(r'critics/(?P<slug>[A-Za-z0-9-_]+)/reviews/$',
        CriticInstanceReviews.as_view(),
        name='api-critics-instance-reviews'),

    url(r'login/$',
        UserToken.as_view(),
        name="api-user-get-token"),
    url(r'revoke/$',
        UserRevokeToken.as_view(),
        name="api-user-revoke-token"),
    url(r'reset-request/$',
        UserPasswordResetRequest.as_view(),
        name="api-password-reset-request"),
    url(r'register/$',
        Register.as_view(),
        name='api-register'),

    url(r'restaurant-combined-search/$',
        RestaurantCombinedSearch.as_view(),
        name='api-restaurant-combined-search'),

    url(r'restaurant-widget-search/$',
        RestaurantWidgetSearch.as_view(),
        name='api-restaurant-widget-search'),
    url(r'restaurant-solr-search/$',
        RestaurantSolrSearch.as_view(),
        name='api-restaurant-solr-search'),
    url(r'search-autocomplete/$',
        SearchAutocomplete.as_view(),
        name='api-search-autocomplete'),
    url(r'restaurant-autocomplete/$',
        RestaurantAutocomplete.as_view(),
        name='api-restaurant-autocomplete'),

    url(r'blackbook/$',
        BlackBookList.as_view(),
        name='api-blackbook-list'),
    url(r'blackbook/(?P<pk>[^/]+)/$',
        BlackBookInstance.as_view(),
        name='api-blackbook-instance'),
    url(r'blackbook/(?P<pk>[^/]+)/entries/$',
        BlackBookEntryList.as_view(),
        name='api-blackbook-entry-list'),
    url(r'blackbook/(?P<pk>[^/]+)/entries/(?P<entry_pk>[^/]+)/$',
        BlackBookEntryInstance.as_view(),
        name='api-blackbook-entry-instance'),

    url(r'cuisines/$',
        generics.ListAPIView.as_view(
            model=Cuisine,
            serializer_class=CuisineSerializer,
        ),
        name="api-cuisines-list"),

    url(r'occasions/$',
        generics.ListAPIView.as_view(
            model=Occasion,
            serializer_class=OccasionSerializer,
        ),
        name="api-occasions-list"),

    url(r'neighborhoods/$',
        generics.ListAPIView.as_view(
            model=Neighborhood,
            serializer_class=NeighborhoodSerializer,
        ),
        name="api-neighborhoods-list"),

    url(r'prices/$',
        generics.ListAPIView.as_view(
            model=Price,
            serializer_class=PriceSerializer,
        ),
        name="api-prices-list"),

    url(r'cities/$',
        CityList.as_view(),
        name='api-cities-list'),
)
